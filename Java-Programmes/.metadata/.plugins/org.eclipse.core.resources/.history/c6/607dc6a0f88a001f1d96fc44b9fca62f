package dsaProblems;

import java.util.Stack;

public class PushAtBottomOfStack {
	
	public static void pushAtBottom(Stack<Integer> st, int ele) {
		//push given element when stack is empty
		if(st.isEmpty()) {
			st.push(ele);
			return;
		}
		int top = st.pop(); //remove all elements of stack
		pushAtBottom(st,ele);
		st.push(top); //push back all popped element after pushing given element
	}
	
	public static void reverse(Stack<Integer> st) {
		if(st.isEmpty()) {
			return;
		}
		//remove top element
		int top = st.pop();
		//reverse remaining stack until it is empty
		reverse(st);
		
		//push top at bottom;
		pushAtBottom(st,top);
	}

	public static void main(String[] args) {
		Stack<Integer> st = new Stack<>();
		
		st.push(1);
		st.push(2);
		st.push(3);
		System.out.println(st.toString());
		
		int ele = 0;
		pushAtBottom(st, ele);
		
		System.out.println(st.toString());
		
		reverse(st);
		System.out.println(st.toString());
	}

}
